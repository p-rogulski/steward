@use "sass:color";
@use "sass:map";
@import './main-theme';

@mixin button-color-variants($args...) {
  @each $name in $args {
    $color: map.get($color-pallete, $name);

    &--#{$name} {
      background-color: $color;

      @if $name=='secondary' {
        color:map.get($color-pallete, 'grey');
      }@else if $name=='transparency' {
        color:map.get($color-pallete, 'dark');
        &:hover {
          background-color: #f4f4f4f4;
        }
      }
      
      @if $name!='transparency'{
        border: 1px adjust-color($color, $lightness:-5%) solid;
        &:hover {
          background-color: adjust-color($color, $lightness:-3%);
        }
      }

     
    }
  }
}

@mixin border-color-variants($args...) {
  @each $name in $args {
    $color: map.get($color-pallete, $name);

    &--#{$name} {
     border-color: $color;
    }
  }
}

@mixin text-color-variants($args...) {
  @each $name in $args {
    $color: map.get($color-pallete, $name);

    &--#{$name} {
     color: $color;
    }
  }
}

@mixin size-variants($args...) {
  @each $name in $args {
    $size: map.get($size-variants, $name);

    &--#{$name} {
      padding:$size;
    }
  }
}

@mixin font-size-variants($args...) {
  @each $name in $args {
    $size: map.get($font-sizes, $name);

    &--#{$name} {
      font-size:$size;
    }
  }
}

/** Layout */
.wrapper {
  position: relative;
  min-height: $layoutHeight;

  .header {
    position: fixed;
    z-index: 1;
    width: 100%;
    margin: auto;
  }

  .content {
    min-height: $layoutHeight;
    padding: 6rem 2rem 2rem 2rem;
    margin: auto;
    max-width: $layoutWidth;
    font-size: 1.4rem;
  }
}

/** Buttons */
.button {

  cursor: pointer;
  outline: none;
  border: none;
  padding: map.get($size-variants, 'regular');
  border-radius: 4px;
  font-weight: map.get($font-weights ,'bold');
  color: #fff;

  font-size: 1.2rem;
  @include button-color-variants(primary, secondary, success, upload, danger, transparency);
  @include size-variants(small, large);
}


/** Inputs */
.input {
  border-radius:4px;
  border:1px #cccccc solid;
  width: 100%;
  outline: none;
  padding: map.get($size-variants, 'regular');
  @include size-variants(small, large);
  @include border-color-variants(error);
}



.select{
  @extend .input;
  font-size: 1.6rem;
}

.fieldset{
  border: 1px map.get($color-pallete, 'grey') solid;
  border-radius: 4px;
    .legend{
      color: 1px map.get($color-pallete, 'grey') solid;
    }
}


.title{
  @include font-size-variants(small, large);
}

.text{
  @include font-size-variants(small, regular ,large);
  @include text-color-variants(error);
}

.label{
  font-size: map.get($font-sizes, 'small');
  font-weight: map.get($font-weights ,'bold');
  color:map.get($color-pallete, 'dark');
  padding: map.get($size-variants, 'small');
}

.field-group{
  display:grid;
  align-items: center;

  grid-template-columns: max-content max-content;
  grid-gap:5px;

  .field--label{
    text-align:right;
  }
}